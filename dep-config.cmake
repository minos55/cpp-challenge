SET ( OPENCV_FIND_REQUIRED TRUE )
SET ( ZEROMQ_FIND_REQUIRED TRUE )

### Opencv ###

FIND_PATH ( OPENCV_INCLUDE_DIR NAMES core.hpp PATHS /usr/include/opencv2/core/ /usr/local/include/opencv2/core/ )
FIND_PATH ( OPENCV_INCLUDE_DIR2 NAMES opencv.hpp PATHS /usr/include/opencv2/ /usr/local/include/opencv2/ )
FIND_PATH ( OPENCV_INCLUDE_DIR3 NAMES highgui.hpp PATHS /usr/include/opencv2/highgui/ /usr/local/include/opencv2/highgui/ )
FIND_LIBRARY ( OPENCV_LIBRARY NAMES opencv_highgui PATHS /usr/lib /usr/local/lib )
FIND_LIBRARY ( OPENCV_LIBRARY2 NAMES opencv_imgcodecs PATHS /usr/lib /usr/local/lib )
FIND_LIBRARY ( OPENCV_LIBRARY3 NAMES opencv_core PATHS /usr/lib /usr/local/lib )

IF ( OPENCV_INCLUDE_DIR AND OPENCV_INCLUDE_DIR2 AND OPENCV_INCLUDE_DIR3 AND OPENCV_LIBRARY AND OPENCV_LIBRARY2 AND OPENCV_LIBRARY3)
    SET ( OPENCV_FOUND TRUE )
ENDIF ( OPENCV_INCLUDE_DIR AND OPENCV_INCLUDE_DIR2 AND OPENCV_INCLUDE_DIR3 AND OPENCV_LIBRARY AND OPENCV_LIBRARY2 AND OPENCV_LIBRARY3)


IF ( OPENCV_FOUND )
    SET ( DEP_FOUND TRUE )
    IF ( NOT OPENCV_FIND_QUIETLY )
        MESSAGE ( STATUS "Found OpenCV:" )
        MESSAGE ( STATUS "  (Headers)       ${OPENCV_INCLUDE_DIR}" )
	MESSAGE ( STATUS "  (Headers)       ${OPENCV_INCLUDE_DIR2}" )
	MESSAGE ( STATUS "  (Headers)       ${OPENCV_INCLUDE_DIR3}" )
        MESSAGE ( STATUS "  (Library)       ${OPENCV_LIBRARY}" )
	MESSAGE ( STATUS "  (Library)       ${OPENCV_LIBRARY2}" )
	MESSAGE ( STATUS "  (Library)       ${OPENCV_LIBRARY3}" )
    ENDIF ( NOT OPENCV_FIND_QUIETLY )
ELSE ( OPENCV_FOUND )
    SET ( DEP_FOUND FALSE )
    IF ( OPENCV_FIND_REQUIRED )
        MESSAGE ( FATAL_ERROR "Could not find OpenCV" )
    ENDIF ( OPENCV_FIND_REQUIRED )
ENDIF ( OPENCV_FOUND )

### ZeroMQ ###

FIND_PATH ( ZEROMQ_INCLUDE_DIR NAMES zmq.h PATHS /usr/include/ /usr/local/include/ )
FIND_LIBRARY ( ZEROMQ_LIBRARY NAMES zmq PATHS /usr/lib /usr/local/lib )

IF ( ZEROMQ_INCLUDE_DIR AND ZEROMQ_LIBRARY )
    SET ( ZEROMQ_FOUND TRUE )
ENDIF ( ZEROMQ_INCLUDE_DIR AND ZEROMQ_LIBRARY )


IF ( ZEROMQ_FOUND )
    SET ( DEP_FOUND TRUE )
    IF ( NOT ZEROMQ_FIND_QUIETLY )
        MESSAGE ( STATUS "Found ZeroMQ:" )
        MESSAGE ( STATUS "  (Headers)       ${ZEROMQ_INCLUDE_DIR}" )
        MESSAGE ( STATUS "  (Library)       ${ZEROMQ_LIBRARY}" )
    ENDIF ( NOT ZEROMQ_FIND_QUIETLY )
ELSE ( ZEROMQ_FOUND )
    SET ( DEP_FOUND FALSE )
    IF ( ZEROMQ_FIND_REQUIRED )
        MESSAGE ( FATAL_ERROR "Could not find ZeroMQ" )
    ENDIF ( ZEROMQ_FIND_REQUIRED )
ENDIF ( ZEROMQ_FOUND )
